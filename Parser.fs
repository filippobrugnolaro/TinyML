// Implementation file for parser generated by fsyacc
module TinyML.Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "Parser.fsy"


open TinyML
open FSharp.Common.Parsing.LexYacc
open TinyML.Ast

let parse_error_rich = Some (fun ctx -> raise (ParseErrorContextException ctx))


# 16 "Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | IF
  | THEN
  | ELSE
  | FUN
  | ARROW
  | LET
  | REC
  | IN
  | TRUE
  | FALSE
  | BRA
  | KET
  | PLUS
  | MINUS
  | STAR
  | SLASH
  | PERCENT
  | PLUS_DOT
  | MINUS_DOT
  | STAR_DOT
  | SLASH_DOT
  | PERCENT_DOT
  | LT
  | GT
  | LEQ
  | GEQ
  | EQ
  | NEQ
  | LT_DOT
  | GT_DOT
  | LEQ_DOT
  | GEQ_DOT
  | EQ_DOT
  | NEQ_DOT
  | AND
  | OR
  | NOT
  | NEG
  | NEG_DOT
  | COLON
  | SEMICOLON2
  | COMMA
  | STRING of (System.String)
  | ID of (System.String)
  | CHAR of (System.Char)
  | FLOAT of (System.Double)
  | INT of (System.Int32)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_IF
    | TOKEN_THEN
    | TOKEN_ELSE
    | TOKEN_FUN
    | TOKEN_ARROW
    | TOKEN_LET
    | TOKEN_REC
    | TOKEN_IN
    | TOKEN_TRUE
    | TOKEN_FALSE
    | TOKEN_BRA
    | TOKEN_KET
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_STAR
    | TOKEN_SLASH
    | TOKEN_PERCENT
    | TOKEN_PLUS_DOT
    | TOKEN_MINUS_DOT
    | TOKEN_STAR_DOT
    | TOKEN_SLASH_DOT
    | TOKEN_PERCENT_DOT
    | TOKEN_LT
    | TOKEN_GT
    | TOKEN_LEQ
    | TOKEN_GEQ
    | TOKEN_EQ
    | TOKEN_NEQ
    | TOKEN_LT_DOT
    | TOKEN_GT_DOT
    | TOKEN_LEQ_DOT
    | TOKEN_GEQ_DOT
    | TOKEN_EQ_DOT
    | TOKEN_NEQ_DOT
    | TOKEN_AND
    | TOKEN_OR
    | TOKEN_NOT
    | TOKEN_NEG
    | TOKEN_NEG_DOT
    | TOKEN_COLON
    | TOKEN_SEMICOLON2
    | TOKEN_COMMA
    | TOKEN_STRING
    | TOKEN_ID
    | TOKEN_CHAR
    | TOKEN_FLOAT
    | TOKEN_INT
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startinteractive
    | NONTERM__startprogram
    | NONTERM_program
    | NONTERM_interactive
    | NONTERM_expr
    | NONTERM_binding
    | NONTERM_parms
    | NONTERM_expr_app_atom
    | NONTERM_expr_tuple_atom
    | NONTERM_expr_tuple_atoms
    | NONTERM_ty
    | NONTERM_ty_tuple

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | IF  -> 1 
  | THEN  -> 2 
  | ELSE  -> 3 
  | FUN  -> 4 
  | ARROW  -> 5 
  | LET  -> 6 
  | REC  -> 7 
  | IN  -> 8 
  | TRUE  -> 9 
  | FALSE  -> 10 
  | BRA  -> 11 
  | KET  -> 12 
  | PLUS  -> 13 
  | MINUS  -> 14 
  | STAR  -> 15 
  | SLASH  -> 16 
  | PERCENT  -> 17 
  | PLUS_DOT  -> 18 
  | MINUS_DOT  -> 19 
  | STAR_DOT  -> 20 
  | SLASH_DOT  -> 21 
  | PERCENT_DOT  -> 22 
  | LT  -> 23 
  | GT  -> 24 
  | LEQ  -> 25 
  | GEQ  -> 26 
  | EQ  -> 27 
  | NEQ  -> 28 
  | LT_DOT  -> 29 
  | GT_DOT  -> 30 
  | LEQ_DOT  -> 31 
  | GEQ_DOT  -> 32 
  | EQ_DOT  -> 33 
  | NEQ_DOT  -> 34 
  | AND  -> 35 
  | OR  -> 36 
  | NOT  -> 37 
  | NEG  -> 38 
  | NEG_DOT  -> 39 
  | COLON  -> 40 
  | SEMICOLON2  -> 41 
  | COMMA  -> 42 
  | STRING _ -> 43 
  | ID _ -> 44 
  | CHAR _ -> 45 
  | FLOAT _ -> 46 
  | INT _ -> 47 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_IF 
  | 2 -> TOKEN_THEN 
  | 3 -> TOKEN_ELSE 
  | 4 -> TOKEN_FUN 
  | 5 -> TOKEN_ARROW 
  | 6 -> TOKEN_LET 
  | 7 -> TOKEN_REC 
  | 8 -> TOKEN_IN 
  | 9 -> TOKEN_TRUE 
  | 10 -> TOKEN_FALSE 
  | 11 -> TOKEN_BRA 
  | 12 -> TOKEN_KET 
  | 13 -> TOKEN_PLUS 
  | 14 -> TOKEN_MINUS 
  | 15 -> TOKEN_STAR 
  | 16 -> TOKEN_SLASH 
  | 17 -> TOKEN_PERCENT 
  | 18 -> TOKEN_PLUS_DOT 
  | 19 -> TOKEN_MINUS_DOT 
  | 20 -> TOKEN_STAR_DOT 
  | 21 -> TOKEN_SLASH_DOT 
  | 22 -> TOKEN_PERCENT_DOT 
  | 23 -> TOKEN_LT 
  | 24 -> TOKEN_GT 
  | 25 -> TOKEN_LEQ 
  | 26 -> TOKEN_GEQ 
  | 27 -> TOKEN_EQ 
  | 28 -> TOKEN_NEQ 
  | 29 -> TOKEN_LT_DOT 
  | 30 -> TOKEN_GT_DOT 
  | 31 -> TOKEN_LEQ_DOT 
  | 32 -> TOKEN_GEQ_DOT 
  | 33 -> TOKEN_EQ_DOT 
  | 34 -> TOKEN_NEQ_DOT 
  | 35 -> TOKEN_AND 
  | 36 -> TOKEN_OR 
  | 37 -> TOKEN_NOT 
  | 38 -> TOKEN_NEG 
  | 39 -> TOKEN_NEG_DOT 
  | 40 -> TOKEN_COLON 
  | 41 -> TOKEN_SEMICOLON2 
  | 42 -> TOKEN_COMMA 
  | 43 -> TOKEN_STRING 
  | 44 -> TOKEN_ID 
  | 45 -> TOKEN_CHAR 
  | 46 -> TOKEN_FLOAT 
  | 47 -> TOKEN_INT 
  | 50 -> TOKEN_end_of_input
  | 48 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startinteractive 
    | 1 -> NONTERM__startprogram 
    | 2 -> NONTERM_program 
    | 3 -> NONTERM_interactive 
    | 4 -> NONTERM_interactive 
    | 5 -> NONTERM_expr 
    | 6 -> NONTERM_expr 
    | 7 -> NONTERM_binding 
    | 8 -> NONTERM_binding 
    | 9 -> NONTERM_binding 
    | 10 -> NONTERM_binding 
    | 11 -> NONTERM_binding 
    | 12 -> NONTERM_binding 
    | 13 -> NONTERM_binding 
    | 14 -> NONTERM_binding 
    | 15 -> NONTERM_parms 
    | 16 -> NONTERM_parms 
    | 17 -> NONTERM_parms 
    | 18 -> NONTERM_parms 
    | 19 -> NONTERM_expr_app_atom 
    | 20 -> NONTERM_expr_app_atom 
    | 21 -> NONTERM_expr_app_atom 
    | 22 -> NONTERM_expr_app_atom 
    | 23 -> NONTERM_expr_app_atom 
    | 24 -> NONTERM_expr_app_atom 
    | 25 -> NONTERM_expr_app_atom 
    | 26 -> NONTERM_expr_app_atom 
    | 27 -> NONTERM_expr_app_atom 
    | 28 -> NONTERM_expr_tuple_atom 
    | 29 -> NONTERM_expr_tuple_atom 
    | 30 -> NONTERM_expr_tuple_atom 
    | 31 -> NONTERM_expr_tuple_atom 
    | 32 -> NONTERM_expr_tuple_atom 
    | 33 -> NONTERM_expr_tuple_atom 
    | 34 -> NONTERM_expr_tuple_atom 
    | 35 -> NONTERM_expr_tuple_atom 
    | 36 -> NONTERM_expr_tuple_atom 
    | 37 -> NONTERM_expr_tuple_atom 
    | 38 -> NONTERM_expr_tuple_atom 
    | 39 -> NONTERM_expr_tuple_atom 
    | 40 -> NONTERM_expr_tuple_atom 
    | 41 -> NONTERM_expr_tuple_atom 
    | 42 -> NONTERM_expr_tuple_atom 
    | 43 -> NONTERM_expr_tuple_atom 
    | 44 -> NONTERM_expr_tuple_atom 
    | 45 -> NONTERM_expr_tuple_atom 
    | 46 -> NONTERM_expr_tuple_atom 
    | 47 -> NONTERM_expr_tuple_atom 
    | 48 -> NONTERM_expr_tuple_atom 
    | 49 -> NONTERM_expr_tuple_atom 
    | 50 -> NONTERM_expr_tuple_atom 
    | 51 -> NONTERM_expr_tuple_atom 
    | 52 -> NONTERM_expr_tuple_atom 
    | 53 -> NONTERM_expr_tuple_atom 
    | 54 -> NONTERM_expr_tuple_atom 
    | 55 -> NONTERM_expr_tuple_atom 
    | 56 -> NONTERM_expr_tuple_atom 
    | 57 -> NONTERM_expr_tuple_atom 
    | 58 -> NONTERM_expr_tuple_atom 
    | 59 -> NONTERM_expr_tuple_atom 
    | 60 -> NONTERM_expr_tuple_atom 
    | 61 -> NONTERM_expr_tuple_atom 
    | 62 -> NONTERM_expr_tuple_atom 
    | 63 -> NONTERM_expr_tuple_atoms 
    | 64 -> NONTERM_expr_tuple_atoms 
    | 65 -> NONTERM_ty 
    | 66 -> NONTERM_ty 
    | 67 -> NONTERM_ty 
    | 68 -> NONTERM_ty 
    | 69 -> NONTERM_ty_tuple 
    | 70 -> NONTERM_ty_tuple 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 50 
let _fsyacc_tagOfErrorTerminal = 48

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | IF  -> "IF" 
  | THEN  -> "THEN" 
  | ELSE  -> "ELSE" 
  | FUN  -> "FUN" 
  | ARROW  -> "ARROW" 
  | LET  -> "LET" 
  | REC  -> "REC" 
  | IN  -> "IN" 
  | TRUE  -> "TRUE" 
  | FALSE  -> "FALSE" 
  | BRA  -> "BRA" 
  | KET  -> "KET" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | STAR  -> "STAR" 
  | SLASH  -> "SLASH" 
  | PERCENT  -> "PERCENT" 
  | PLUS_DOT  -> "PLUS_DOT" 
  | MINUS_DOT  -> "MINUS_DOT" 
  | STAR_DOT  -> "STAR_DOT" 
  | SLASH_DOT  -> "SLASH_DOT" 
  | PERCENT_DOT  -> "PERCENT_DOT" 
  | LT  -> "LT" 
  | GT  -> "GT" 
  | LEQ  -> "LEQ" 
  | GEQ  -> "GEQ" 
  | EQ  -> "EQ" 
  | NEQ  -> "NEQ" 
  | LT_DOT  -> "LT_DOT" 
  | GT_DOT  -> "GT_DOT" 
  | LEQ_DOT  -> "LEQ_DOT" 
  | GEQ_DOT  -> "GEQ_DOT" 
  | EQ_DOT  -> "EQ_DOT" 
  | NEQ_DOT  -> "NEQ_DOT" 
  | AND  -> "AND" 
  | OR  -> "OR" 
  | NOT  -> "NOT" 
  | NEG  -> "NEG" 
  | NEG_DOT  -> "NEG_DOT" 
  | COLON  -> "COLON" 
  | SEMICOLON2  -> "SEMICOLON2" 
  | COMMA  -> "COMMA" 
  | STRING _ -> "STRING" 
  | ID _ -> "ID" 
  | CHAR _ -> "CHAR" 
  | FLOAT _ -> "FLOAT" 
  | INT _ -> "INT" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | FUN  -> (null : System.Object) 
  | ARROW  -> (null : System.Object) 
  | LET  -> (null : System.Object) 
  | REC  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | BRA  -> (null : System.Object) 
  | KET  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | STAR  -> (null : System.Object) 
  | SLASH  -> (null : System.Object) 
  | PERCENT  -> (null : System.Object) 
  | PLUS_DOT  -> (null : System.Object) 
  | MINUS_DOT  -> (null : System.Object) 
  | STAR_DOT  -> (null : System.Object) 
  | SLASH_DOT  -> (null : System.Object) 
  | PERCENT_DOT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LEQ  -> (null : System.Object) 
  | GEQ  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NEQ  -> (null : System.Object) 
  | LT_DOT  -> (null : System.Object) 
  | GT_DOT  -> (null : System.Object) 
  | LEQ_DOT  -> (null : System.Object) 
  | GEQ_DOT  -> (null : System.Object) 
  | EQ_DOT  -> (null : System.Object) 
  | NEQ_DOT  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | NEG  -> (null : System.Object) 
  | NEG_DOT  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | SEMICOLON2  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ID _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FLOAT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 0us; 65535us; 1us; 65535us; 2us; 3us; 1us; 65535us; 0us; 1us; 18us; 65535us; 0us; 6us; 2us; 4us; 12us; 62us; 17us; 18us; 20us; 21us; 24us; 25us; 28us; 29us; 32us; 33us; 35us; 36us; 39us; 40us; 43us; 44us; 59us; 62us; 97us; 98us; 104us; 105us; 107us; 108us; 137us; 138us; 139us; 140us; 141us; 142us; 47us; 65535us; 0us; 8us; 2us; 106us; 12us; 106us; 17us; 106us; 20us; 106us; 24us; 106us; 28us; 106us; 32us; 106us; 35us; 106us; 39us; 106us; 43us; 106us; 59us; 106us; 97us; 106us; 104us; 106us; 107us; 106us; 109us; 106us; 110us; 106us; 111us; 106us; 112us; 106us; 113us; 106us; 114us; 106us; 115us; 106us; 116us; 106us; 117us; 106us; 118us; 106us; 119us; 106us; 120us; 106us; 121us; 106us; 122us; 106us; 123us; 106us; 124us; 106us; 125us; 106us; 126us; 106us; 127us; 106us; 128us; 106us; 129us; 106us; 130us; 106us; 131us; 106us; 132us; 106us; 133us; 106us; 134us; 106us; 135us; 106us; 136us; 106us; 137us; 106us; 139us; 106us; 141us; 106us; 143us; 106us; 4us; 65535us; 16us; 19us; 31us; 34us; 45us; 51us; 50us; 52us; 78us; 65535us; 0us; 64us; 2us; 64us; 10us; 94us; 11us; 94us; 12us; 64us; 17us; 64us; 20us; 64us; 24us; 64us; 28us; 64us; 32us; 64us; 35us; 64us; 39us; 64us; 43us; 64us; 59us; 64us; 65us; 94us; 66us; 94us; 67us; 94us; 68us; 94us; 69us; 94us; 70us; 94us; 71us; 94us; 72us; 94us; 73us; 94us; 74us; 94us; 75us; 94us; 76us; 94us; 77us; 94us; 78us; 94us; 79us; 94us; 80us; 94us; 81us; 94us; 82us; 94us; 83us; 94us; 84us; 94us; 85us; 94us; 86us; 94us; 87us; 94us; 88us; 94us; 89us; 94us; 90us; 94us; 91us; 94us; 92us; 94us; 93us; 94us; 97us; 64us; 104us; 64us; 107us; 64us; 109us; 64us; 110us; 64us; 111us; 64us; 112us; 64us; 113us; 64us; 114us; 64us; 115us; 64us; 116us; 64us; 117us; 64us; 118us; 64us; 119us; 64us; 120us; 64us; 121us; 64us; 122us; 64us; 123us; 64us; 124us; 64us; 125us; 64us; 126us; 64us; 127us; 64us; 128us; 64us; 129us; 64us; 130us; 64us; 131us; 64us; 132us; 64us; 133us; 64us; 134us; 64us; 135us; 64us; 136us; 64us; 137us; 64us; 139us; 64us; 141us; 64us; 143us; 64us; 47us; 65535us; 0us; 10us; 2us; 10us; 12us; 11us; 17us; 10us; 20us; 10us; 24us; 10us; 28us; 10us; 32us; 10us; 35us; 10us; 39us; 10us; 43us; 10us; 59us; 10us; 97us; 10us; 104us; 10us; 107us; 10us; 109us; 65us; 110us; 66us; 111us; 67us; 112us; 68us; 113us; 69us; 114us; 70us; 115us; 71us; 116us; 72us; 117us; 73us; 118us; 74us; 119us; 75us; 120us; 76us; 121us; 77us; 122us; 78us; 123us; 79us; 124us; 80us; 125us; 81us; 126us; 82us; 127us; 83us; 128us; 84us; 129us; 85us; 130us; 86us; 131us; 87us; 132us; 88us; 133us; 89us; 134us; 90us; 135us; 91us; 136us; 92us; 137us; 10us; 139us; 10us; 141us; 10us; 143us; 93us; 2us; 65535us; 12us; 13us; 143us; 144us; 9us; 65535us; 22us; 23us; 26us; 27us; 37us; 38us; 41us; 42us; 48us; 49us; 101us; 102us; 149us; 146us; 152us; 147us; 154us; 148us; 9us; 65535us; 22us; 150us; 26us; 150us; 37us; 150us; 41us; 150us; 48us; 150us; 101us; 150us; 149us; 150us; 152us; 150us; 154us; 151us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 2us; 4us; 6us; 25us; 73us; 78us; 157us; 205us; 208us; 218us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 2us; 1us; 3us; 1us; 3us; 2us; 4us; 32us; 1us; 4us; 26us; 5us; 29us; 37us; 38us; 39us; 40us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 28us; 5us; 29us; 37us; 38us; 39us; 40us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 63us; 64us; 3us; 6us; 25us; 27us; 1us; 6us; 1us; 6us; 8us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 4us; 7us; 8us; 9us; 10us; 1us; 7us; 1us; 7us; 2us; 8us; 10us; 1us; 8us; 1us; 8us; 1us; 9us; 4us; 9us; 66us; 69us; 70us; 1us; 9us; 1us; 9us; 1us; 10us; 4us; 10us; 66us; 69us; 70us; 1us; 10us; 1us; 10us; 4us; 11us; 12us; 13us; 14us; 4us; 11us; 12us; 13us; 14us; 1us; 11us; 1us; 11us; 2us; 12us; 13us; 1us; 12us; 1us; 12us; 1us; 13us; 4us; 13us; 66us; 69us; 70us; 1us; 13us; 1us; 13us; 1us; 14us; 4us; 14us; 66us; 69us; 70us; 1us; 14us; 1us; 14us; 2us; 15us; 17us; 2us; 16us; 18us; 2us; 16us; 18us; 2us; 16us; 18us; 5us; 16us; 18us; 66us; 69us; 70us; 2us; 16us; 18us; 1us; 17us; 1us; 18us; 1us; 19us; 1us; 20us; 1us; 21us; 1us; 22us; 1us; 23us; 1us; 24us; 2us; 25us; 27us; 1us; 25us; 1us; 26us; 1us; 27us; 1us; 27us; 1us; 28us; 26us; 29us; 33us; 37us; 38us; 39us; 40us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 26us; 29us; 34us; 37us; 38us; 39us; 40us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 26us; 29us; 35us; 37us; 38us; 39us; 40us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 26us; 29us; 36us; 37us; 38us; 39us; 40us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 26us; 29us; 37us; 37us; 38us; 39us; 40us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 26us; 29us; 37us; 38us; 38us; 39us; 40us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 26us; 29us; 37us; 38us; 39us; 39us; 40us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 26us; 29us; 37us; 38us; 39us; 40us; 40us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 26us; 29us; 37us; 38us; 39us; 40us; 41us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 26us; 29us; 37us; 38us; 39us; 40us; 41us; 42us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 26us; 29us; 37us; 38us; 39us; 40us; 41us; 42us; 43us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 26us; 29us; 37us; 38us; 39us; 40us; 41us; 42us; 43us; 44us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 26us; 29us; 37us; 38us; 39us; 40us; 41us; 42us; 43us; 44us; 45us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 26us; 29us; 37us; 38us; 39us; 40us; 41us; 42us; 43us; 44us; 45us; 46us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 26us; 29us; 37us; 38us; 39us; 40us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 26us; 29us; 37us; 38us; 39us; 40us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 26us; 29us; 37us; 38us; 39us; 40us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 26us; 29us; 37us; 38us; 39us; 40us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 26us; 29us; 37us; 38us; 39us; 40us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 26us; 29us; 37us; 38us; 39us; 40us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 26us; 29us; 37us; 38us; 39us; 40us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 26us; 29us; 37us; 38us; 39us; 40us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 26us; 29us; 37us; 38us; 39us; 40us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 55us; 56us; 57us; 58us; 59us; 60us; 26us; 29us; 37us; 38us; 39us; 40us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 56us; 57us; 58us; 59us; 60us; 26us; 29us; 37us; 38us; 39us; 40us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 57us; 58us; 59us; 60us; 26us; 29us; 37us; 38us; 39us; 40us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 58us; 59us; 60us; 26us; 29us; 37us; 38us; 39us; 40us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 59us; 60us; 26us; 29us; 37us; 38us; 39us; 40us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 60us; 27us; 29us; 37us; 38us; 39us; 40us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 63us; 64us; 1us; 29us; 2us; 30us; 31us; 1us; 30us; 1us; 30us; 1us; 30us; 1us; 31us; 1us; 31us; 1us; 31us; 4us; 31us; 66us; 69us; 70us; 1us; 31us; 1us; 31us; 1us; 31us; 1us; 32us; 1us; 32us; 1us; 32us; 1us; 33us; 1us; 34us; 1us; 35us; 1us; 36us; 1us; 37us; 1us; 38us; 1us; 39us; 1us; 40us; 1us; 41us; 1us; 42us; 1us; 43us; 1us; 44us; 1us; 45us; 1us; 46us; 1us; 47us; 1us; 48us; 1us; 49us; 1us; 50us; 1us; 51us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 2us; 61us; 62us; 2us; 61us; 62us; 2us; 61us; 62us; 2us; 61us; 62us; 1us; 62us; 1us; 62us; 1us; 64us; 1us; 64us; 1us; 65us; 4us; 66us; 66us; 69us; 70us; 4us; 66us; 68us; 69us; 70us; 3us; 66us; 69us; 70us; 1us; 66us; 1us; 67us; 2us; 67us; 70us; 1us; 68us; 1us; 68us; 1us; 70us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 19us; 21us; 48us; 77us; 81us; 83us; 85us; 94us; 99us; 101us; 103us; 106us; 108us; 110us; 112us; 117us; 119us; 121us; 123us; 128us; 130us; 132us; 137us; 142us; 144us; 146us; 149us; 151us; 153us; 155us; 160us; 162us; 164us; 166us; 171us; 173us; 175us; 178us; 181us; 184us; 187us; 193us; 196us; 198us; 200us; 202us; 204us; 206us; 208us; 210us; 212us; 215us; 217us; 219us; 221us; 223us; 225us; 252us; 279us; 306us; 333us; 360us; 387us; 414us; 441us; 468us; 495us; 522us; 549us; 576us; 603us; 630us; 657us; 684us; 711us; 738us; 765us; 792us; 819us; 846us; 873us; 900us; 927us; 954us; 981us; 1009us; 1011us; 1014us; 1016us; 1018us; 1020us; 1022us; 1024us; 1026us; 1031us; 1033us; 1035us; 1037us; 1039us; 1041us; 1043us; 1045us; 1047us; 1049us; 1051us; 1053us; 1055us; 1057us; 1059us; 1061us; 1063us; 1065us; 1067us; 1069us; 1071us; 1073us; 1075us; 1077us; 1079us; 1081us; 1083us; 1085us; 1087us; 1089us; 1091us; 1093us; 1095us; 1097us; 1099us; 1102us; 1105us; 1108us; 1111us; 1113us; 1115us; 1117us; 1119us; 1121us; 1126us; 1131us; 1135us; 1137us; 1139us; 1142us; 1144us; 1146us; |]
let _fsyacc_action_rows = 155
let _fsyacc_actionTableElements = [|15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 12us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 0us; 49152us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 12us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 0us; 49152us; 1us; 32768us; 0us; 5us; 0us; 16386us; 1us; 32768us; 41us; 7us; 0us; 16387us; 2us; 32768us; 8us; 107us; 41us; 9us; 0us; 16388us; 32us; 16389us; 9us; 57us; 10us; 58us; 11us; 59us; 13us; 113us; 14us; 114us; 15us; 115us; 16us; 116us; 17us; 117us; 18us; 118us; 19us; 119us; 20us; 120us; 21us; 121us; 22us; 122us; 23us; 125us; 24us; 126us; 25us; 127us; 26us; 128us; 27us; 123us; 28us; 124us; 29us; 131us; 30us; 132us; 31us; 133us; 32us; 134us; 33us; 129us; 34us; 130us; 35us; 135us; 36us; 136us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 33us; 16389us; 9us; 57us; 10us; 58us; 11us; 59us; 13us; 113us; 14us; 114us; 15us; 115us; 16us; 116us; 17us; 117us; 18us; 118us; 19us; 119us; 20us; 120us; 21us; 121us; 22us; 122us; 23us; 125us; 24us; 126us; 25us; 127us; 26us; 128us; 27us; 123us; 28us; 124us; 29us; 131us; 30us; 132us; 31us; 133us; 32us; 134us; 33us; 129us; 34us; 130us; 35us; 135us; 36us; 136us; 42us; 143us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 16us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 12us; 12us; 60us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 1us; 32768us; 12us; 14us; 0us; 16390us; 2us; 32768us; 7us; 30us; 44us; 16us; 4us; 32768us; 11us; 46us; 27us; 17us; 40us; 22us; 44us; 45us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 12us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 0us; 16391us; 2us; 32768us; 27us; 20us; 40us; 26us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 12us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 0us; 16392us; 2us; 32768us; 11us; 152us; 44us; 145us; 3us; 16453us; 5us; 149us; 15us; 154us; 27us; 24us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 12us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 0us; 16393us; 2us; 32768us; 11us; 152us; 44us; 145us; 3us; 16453us; 5us; 149us; 15us; 154us; 27us; 28us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 12us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 0us; 16394us; 1us; 32768us; 44us; 31us; 4us; 32768us; 11us; 46us; 27us; 32us; 40us; 41us; 44us; 45us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 12us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 0us; 16395us; 2us; 32768us; 27us; 35us; 40us; 37us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 12us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 0us; 16396us; 2us; 32768us; 11us; 152us; 44us; 145us; 3us; 16453us; 5us; 149us; 15us; 154us; 27us; 39us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 12us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 0us; 16397us; 2us; 32768us; 11us; 152us; 44us; 145us; 3us; 16453us; 5us; 149us; 15us; 154us; 27us; 43us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 12us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 0us; 16398us; 2us; 16399us; 11us; 46us; 44us; 45us; 1us; 32768us; 44us; 47us; 1us; 32768us; 40us; 48us; 2us; 32768us; 11us; 152us; 44us; 145us; 3us; 16453us; 5us; 149us; 12us; 50us; 15us; 154us; 2us; 16400us; 11us; 46us; 44us; 45us; 0us; 16401us; 0us; 16402us; 0us; 16403us; 0us; 16404us; 0us; 16405us; 0us; 16406us; 0us; 16407us; 0us; 16408us; 16us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 12us; 12us; 60us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 0us; 16409us; 0us; 16410us; 1us; 32768us; 12us; 63us; 0us; 16411us; 0us; 16412us; 16us; 16417us; 9us; 57us; 10us; 58us; 11us; 59us; 17us; 117us; 22us; 122us; 29us; 131us; 30us; 132us; 31us; 133us; 32us; 134us; 33us; 129us; 34us; 130us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 16us; 16418us; 9us; 57us; 10us; 58us; 11us; 59us; 17us; 117us; 22us; 122us; 29us; 131us; 30us; 132us; 31us; 133us; 32us; 134us; 33us; 129us; 34us; 130us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 16us; 16419us; 9us; 57us; 10us; 58us; 11us; 59us; 17us; 117us; 22us; 122us; 29us; 131us; 30us; 132us; 31us; 133us; 32us; 134us; 33us; 129us; 34us; 130us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 16us; 16420us; 9us; 57us; 10us; 58us; 11us; 59us; 17us; 117us; 22us; 122us; 29us; 131us; 30us; 132us; 31us; 133us; 32us; 134us; 33us; 129us; 34us; 130us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 22us; 16421us; 9us; 57us; 10us; 58us; 11us; 59us; 15us; 115us; 16us; 116us; 17us; 117us; 18us; 118us; 19us; 119us; 20us; 120us; 21us; 121us; 22us; 122us; 29us; 131us; 30us; 132us; 31us; 133us; 32us; 134us; 33us; 129us; 34us; 130us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 22us; 16422us; 9us; 57us; 10us; 58us; 11us; 59us; 15us; 115us; 16us; 116us; 17us; 117us; 18us; 118us; 19us; 119us; 20us; 120us; 21us; 121us; 22us; 122us; 29us; 131us; 30us; 132us; 31us; 133us; 32us; 134us; 33us; 129us; 34us; 130us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 18us; 16423us; 9us; 57us; 10us; 58us; 11us; 59us; 17us; 117us; 20us; 120us; 21us; 121us; 22us; 122us; 29us; 131us; 30us; 132us; 31us; 133us; 32us; 134us; 33us; 129us; 34us; 130us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 18us; 16424us; 9us; 57us; 10us; 58us; 11us; 59us; 17us; 117us; 20us; 120us; 21us; 121us; 22us; 122us; 29us; 131us; 30us; 132us; 31us; 133us; 32us; 134us; 33us; 129us; 34us; 130us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 32us; 16425us; 9us; 57us; 10us; 58us; 11us; 59us; 13us; 113us; 14us; 114us; 15us; 115us; 16us; 116us; 17us; 117us; 18us; 118us; 19us; 119us; 20us; 120us; 21us; 121us; 22us; 122us; 23us; 125us; 24us; 126us; 25us; 127us; 26us; 128us; 27us; 123us; 28us; 124us; 29us; 131us; 30us; 132us; 31us; 133us; 32us; 134us; 33us; 129us; 34us; 130us; 35us; 135us; 36us; 136us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 20us; 16426us; 9us; 57us; 10us; 58us; 11us; 59us; 15us; 115us; 16us; 116us; 17us; 117us; 20us; 120us; 21us; 121us; 22us; 122us; 29us; 131us; 30us; 132us; 31us; 133us; 32us; 134us; 33us; 129us; 34us; 130us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 20us; 16427us; 9us; 57us; 10us; 58us; 11us; 59us; 15us; 115us; 16us; 116us; 17us; 117us; 20us; 120us; 21us; 121us; 22us; 122us; 29us; 131us; 30us; 132us; 31us; 133us; 32us; 134us; 33us; 129us; 34us; 130us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 16us; 16428us; 9us; 57us; 10us; 58us; 11us; 59us; 17us; 117us; 22us; 122us; 29us; 131us; 30us; 132us; 31us; 133us; 32us; 134us; 33us; 129us; 34us; 130us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 16us; 16429us; 9us; 57us; 10us; 58us; 11us; 59us; 17us; 117us; 22us; 122us; 29us; 131us; 30us; 132us; 31us; 133us; 32us; 134us; 33us; 129us; 34us; 130us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 32us; 16430us; 9us; 57us; 10us; 58us; 11us; 59us; 13us; 113us; 14us; 114us; 15us; 115us; 16us; 116us; 17us; 117us; 18us; 118us; 19us; 119us; 20us; 120us; 21us; 121us; 22us; 122us; 23us; 125us; 24us; 126us; 25us; 127us; 26us; 128us; 27us; 123us; 28us; 124us; 29us; 131us; 30us; 132us; 31us; 133us; 32us; 134us; 33us; 129us; 34us; 130us; 35us; 135us; 36us; 136us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 24us; 16431us; 9us; 57us; 10us; 58us; 11us; 59us; 13us; 113us; 14us; 114us; 15us; 115us; 16us; 116us; 17us; 117us; 18us; 118us; 19us; 119us; 20us; 120us; 21us; 121us; 22us; 122us; 29us; 131us; 30us; 132us; 31us; 133us; 32us; 134us; 33us; 129us; 34us; 130us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 24us; 16432us; 9us; 57us; 10us; 58us; 11us; 59us; 13us; 113us; 14us; 114us; 15us; 115us; 16us; 116us; 17us; 117us; 18us; 118us; 19us; 119us; 20us; 120us; 21us; 121us; 22us; 122us; 29us; 131us; 30us; 132us; 31us; 133us; 32us; 134us; 33us; 129us; 34us; 130us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 24us; 16433us; 9us; 57us; 10us; 58us; 11us; 59us; 13us; 113us; 14us; 114us; 15us; 115us; 16us; 116us; 17us; 117us; 18us; 118us; 19us; 119us; 20us; 120us; 21us; 121us; 22us; 122us; 29us; 131us; 30us; 132us; 31us; 133us; 32us; 134us; 33us; 129us; 34us; 130us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 24us; 16434us; 9us; 57us; 10us; 58us; 11us; 59us; 13us; 113us; 14us; 114us; 15us; 115us; 16us; 116us; 17us; 117us; 18us; 118us; 19us; 119us; 20us; 120us; 21us; 121us; 22us; 122us; 29us; 131us; 30us; 132us; 31us; 133us; 32us; 134us; 33us; 129us; 34us; 130us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 24us; 16435us; 9us; 57us; 10us; 58us; 11us; 59us; 13us; 113us; 14us; 114us; 15us; 115us; 16us; 116us; 17us; 117us; 18us; 118us; 19us; 119us; 20us; 120us; 21us; 121us; 22us; 122us; 29us; 131us; 30us; 132us; 31us; 133us; 32us; 134us; 33us; 129us; 34us; 130us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 24us; 16436us; 9us; 57us; 10us; 58us; 11us; 59us; 13us; 113us; 14us; 114us; 15us; 115us; 16us; 116us; 17us; 117us; 18us; 118us; 19us; 119us; 20us; 120us; 21us; 121us; 22us; 122us; 29us; 131us; 30us; 132us; 31us; 133us; 32us; 134us; 33us; 129us; 34us; 130us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 32us; 16437us; 9us; 57us; 10us; 58us; 11us; 59us; 13us; 113us; 14us; 114us; 15us; 115us; 16us; 116us; 17us; 117us; 18us; 118us; 19us; 119us; 20us; 120us; 21us; 121us; 22us; 122us; 23us; 125us; 24us; 126us; 25us; 127us; 26us; 128us; 27us; 123us; 28us; 124us; 29us; 131us; 30us; 132us; 31us; 133us; 32us; 134us; 33us; 129us; 34us; 130us; 35us; 135us; 36us; 136us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 32us; 16438us; 9us; 57us; 10us; 58us; 11us; 59us; 13us; 113us; 14us; 114us; 15us; 115us; 16us; 116us; 17us; 117us; 18us; 118us; 19us; 119us; 20us; 120us; 21us; 121us; 22us; 122us; 23us; 125us; 24us; 126us; 25us; 127us; 26us; 128us; 27us; 123us; 28us; 124us; 29us; 131us; 30us; 132us; 31us; 133us; 32us; 134us; 33us; 129us; 34us; 130us; 35us; 135us; 36us; 136us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 32us; 16439us; 9us; 57us; 10us; 58us; 11us; 59us; 13us; 113us; 14us; 114us; 15us; 115us; 16us; 116us; 17us; 117us; 18us; 118us; 19us; 119us; 20us; 120us; 21us; 121us; 22us; 122us; 23us; 125us; 24us; 126us; 25us; 127us; 26us; 128us; 27us; 123us; 28us; 124us; 29us; 131us; 30us; 132us; 31us; 133us; 32us; 134us; 33us; 129us; 34us; 130us; 35us; 135us; 36us; 136us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 32us; 16440us; 9us; 57us; 10us; 58us; 11us; 59us; 13us; 113us; 14us; 114us; 15us; 115us; 16us; 116us; 17us; 117us; 18us; 118us; 19us; 119us; 20us; 120us; 21us; 121us; 22us; 122us; 23us; 125us; 24us; 126us; 25us; 127us; 26us; 128us; 27us; 123us; 28us; 124us; 29us; 131us; 30us; 132us; 31us; 133us; 32us; 134us; 33us; 129us; 34us; 130us; 35us; 135us; 36us; 136us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 32us; 16441us; 9us; 57us; 10us; 58us; 11us; 59us; 13us; 113us; 14us; 114us; 15us; 115us; 16us; 116us; 17us; 117us; 18us; 118us; 19us; 119us; 20us; 120us; 21us; 121us; 22us; 122us; 23us; 125us; 24us; 126us; 25us; 127us; 26us; 128us; 27us; 123us; 28us; 124us; 29us; 131us; 30us; 132us; 31us; 133us; 32us; 134us; 33us; 129us; 34us; 130us; 35us; 135us; 36us; 136us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 32us; 16442us; 9us; 57us; 10us; 58us; 11us; 59us; 13us; 113us; 14us; 114us; 15us; 115us; 16us; 116us; 17us; 117us; 18us; 118us; 19us; 119us; 20us; 120us; 21us; 121us; 22us; 122us; 23us; 125us; 24us; 126us; 25us; 127us; 26us; 128us; 27us; 123us; 28us; 124us; 29us; 131us; 30us; 132us; 31us; 133us; 32us; 134us; 33us; 129us; 34us; 130us; 35us; 135us; 36us; 136us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 30us; 16443us; 9us; 57us; 10us; 58us; 11us; 59us; 13us; 113us; 14us; 114us; 15us; 115us; 16us; 116us; 17us; 117us; 18us; 118us; 19us; 119us; 20us; 120us; 21us; 121us; 22us; 122us; 23us; 125us; 24us; 126us; 25us; 127us; 26us; 128us; 27us; 123us; 28us; 124us; 29us; 131us; 30us; 132us; 31us; 133us; 32us; 134us; 33us; 129us; 34us; 130us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 31us; 16444us; 9us; 57us; 10us; 58us; 11us; 59us; 13us; 113us; 14us; 114us; 15us; 115us; 16us; 116us; 17us; 117us; 18us; 118us; 19us; 119us; 20us; 120us; 21us; 121us; 22us; 122us; 23us; 125us; 24us; 126us; 25us; 127us; 26us; 128us; 27us; 123us; 28us; 124us; 29us; 131us; 30us; 132us; 31us; 133us; 32us; 134us; 33us; 129us; 34us; 130us; 35us; 135us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 33us; 16447us; 9us; 57us; 10us; 58us; 11us; 59us; 13us; 113us; 14us; 114us; 15us; 115us; 16us; 116us; 17us; 117us; 18us; 118us; 19us; 119us; 20us; 120us; 21us; 121us; 22us; 122us; 23us; 125us; 24us; 126us; 25us; 127us; 26us; 128us; 27us; 123us; 28us; 124us; 29us; 131us; 30us; 132us; 31us; 133us; 32us; 134us; 33us; 129us; 34us; 130us; 35us; 135us; 36us; 136us; 42us; 143us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 0us; 16413us; 2us; 32768us; 11us; 99us; 44us; 96us; 1us; 32768us; 5us; 97us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 12us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 0us; 16414us; 1us; 32768us; 44us; 100us; 1us; 32768us; 40us; 101us; 2us; 32768us; 11us; 152us; 44us; 145us; 3us; 16453us; 5us; 149us; 12us; 103us; 15us; 154us; 1us; 32768us; 5us; 104us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 12us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 0us; 16415us; 1us; 32768us; 8us; 107us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 12us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 0us; 16416us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 59us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 59us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 59us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 59us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 59us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 59us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 59us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 59us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 59us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 59us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 59us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 59us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 59us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 59us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 59us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 59us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 59us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 59us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 59us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 59us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 59us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 59us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 59us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 59us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 59us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 59us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 59us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 59us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 12us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 1us; 32768us; 2us; 139us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 12us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 1us; 16445us; 3us; 141us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 12us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 0us; 16446us; 15us; 32768us; 1us; 137us; 4us; 95us; 6us; 15us; 9us; 57us; 10us; 58us; 11us; 59us; 14us; 112us; 37us; 109us; 38us; 110us; 39us; 111us; 43us; 55us; 44us; 61us; 45us; 56us; 46us; 54us; 47us; 53us; 0us; 16448us; 0us; 16449us; 2us; 16450us; 5us; 149us; 15us; 154us; 3us; 16453us; 5us; 149us; 12us; 153us; 15us; 154us; 2us; 16453us; 5us; 149us; 15us; 154us; 2us; 32768us; 11us; 152us; 44us; 145us; 0us; 16451us; 0us; 16451us; 2us; 32768us; 11us; 152us; 44us; 145us; 0us; 16452us; 2us; 32768us; 11us; 152us; 44us; 145us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 16us; 17us; 33us; 34us; 36us; 37us; 39us; 40us; 43us; 44us; 77us; 111us; 128us; 130us; 131us; 134us; 139us; 155us; 156us; 159us; 175us; 176us; 179us; 183us; 199us; 200us; 203us; 207us; 223us; 224us; 226us; 231us; 247us; 248us; 251us; 267us; 268us; 271us; 275us; 291us; 292us; 295us; 299us; 315us; 316us; 319us; 321us; 323us; 326us; 330us; 333us; 334us; 335us; 336us; 337us; 338us; 339us; 340us; 341us; 358us; 359us; 360us; 362us; 363us; 364us; 381us; 398us; 415us; 432us; 455us; 478us; 497us; 516us; 549us; 570us; 591us; 608us; 625us; 658us; 683us; 708us; 733us; 758us; 783us; 808us; 841us; 874us; 907us; 940us; 973us; 1006us; 1037us; 1069us; 1103us; 1104us; 1107us; 1109us; 1125us; 1126us; 1128us; 1130us; 1133us; 1137us; 1139us; 1155us; 1156us; 1158us; 1174us; 1175us; 1191us; 1207us; 1223us; 1239us; 1255us; 1271us; 1287us; 1303us; 1319us; 1335us; 1351us; 1367us; 1383us; 1399us; 1415us; 1431us; 1447us; 1463us; 1479us; 1495us; 1511us; 1527us; 1543us; 1559us; 1575us; 1591us; 1607us; 1623us; 1639us; 1641us; 1657us; 1659us; 1675us; 1676us; 1692us; 1693us; 1694us; 1697us; 1701us; 1704us; 1707us; 1708us; 1709us; 1712us; 1713us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 1us; 2us; 2us; 2us; 1us; 3us; 4us; 5us; 6us; 7us; 5us; 6us; 8us; 7us; 1us; 5us; 2us; 6us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 3us; 1us; 2us; 4us; 8us; 3us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 4us; 6us; 1us; 3us; 1us; 3us; 1us; 3us; 1us; 3us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 3us; 3us; 4us; 4us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 6us; 6us; 6us; 6us; 7us; 7us; 7us; 7us; 7us; 7us; 7us; 7us; 7us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 9us; 9us; 10us; 10us; 10us; 10us; 11us; 11us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 49152us; 65535us; 16386us; 65535us; 16387us; 65535us; 16388us; 65535us; 65535us; 65535us; 65535us; 16390us; 65535us; 65535us; 65535us; 16391us; 65535us; 65535us; 16392us; 65535us; 65535us; 65535us; 16393us; 65535us; 65535us; 65535us; 16394us; 65535us; 65535us; 65535us; 16395us; 65535us; 65535us; 16396us; 65535us; 65535us; 65535us; 16397us; 65535us; 65535us; 65535us; 16398us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16401us; 16402us; 16403us; 16404us; 16405us; 16406us; 16407us; 16408us; 65535us; 16409us; 16410us; 65535us; 16411us; 16412us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16413us; 65535us; 65535us; 65535us; 16414us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16446us; 65535us; 16448us; 16449us; 65535us; 65535us; 65535us; 65535us; 16451us; 65535us; 65535us; 16452us; 65535us; |]
let _fsyacc_reductions ()  =    [| 
# 434 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  TinyML.Ast.interactive )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startinteractive));
# 443 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  TinyML.Ast.expr )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startprogram));
# 452 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 53 "Parser.fsy"
                                                              _1 
                   )
# 53 "Parser.fsy"
                 :  TinyML.Ast.expr ));
# 463 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "Parser.fsy"
                                                               IExpr _1 
                   )
# 56 "Parser.fsy"
                 :  TinyML.Ast.interactive ));
# 474 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'binding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 57 "Parser.fsy"
                                                               IBinding _1 
                   )
# 57 "Parser.fsy"
                 :  TinyML.Ast.interactive ));
# 485 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "Parser.fsy"
                                                                   _1 
                   )
# 60 "Parser.fsy"
                 : 'expr));
# 496 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atoms)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "Parser.fsy"
                                                                   Tuple _2 
                   )
# 61 "Parser.fsy"
                 : 'expr));
# 507 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 65 "Parser.fsy"
                                                                (false, _2, None, _4) 
                   )
# 65 "Parser.fsy"
                 : 'binding));
# 519 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parms)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 66 "Parser.fsy"
                                                                (false, _2, None, fold_params _3 _5) 
                   )
# 66 "Parser.fsy"
                 : 'binding));
# 532 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ty)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 68 "Parser.fsy"
                                                                (false, _2, Some _4, _6) 
                   )
# 68 "Parser.fsy"
                 : 'binding));
# 545 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parms)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'ty)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 69 "Parser.fsy"
                                                                (false, _2, Some _5, fold_params _3 _7) 
                   )
# 69 "Parser.fsy"
                 : 'binding));
# 559 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 71 "Parser.fsy"
                                                                (true, _3, None, _5) 
                   )
# 71 "Parser.fsy"
                 : 'binding));
# 571 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'parms)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 72 "Parser.fsy"
                                                                (true, _3, None, fold_params _4 _6 )
                   )
# 72 "Parser.fsy"
                 : 'binding));
# 584 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'parms)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'ty)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 74 "Parser.fsy"
                                                                (true, _3, Some _6, fold_params _4 _8) 
                   )
# 74 "Parser.fsy"
                 : 'binding));
# 598 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'ty)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 "Parser.fsy"
                                                                (true, _3, Some _5, _7) 
                   )
# 75 "Parser.fsy"
                 : 'binding));
# 611 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 78 "Parser.fsy"
                                                         [_1, None] 
                   )
# 78 "Parser.fsy"
                 : 'parms));
# 622 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 79 "Parser.fsy"
                                                         [_2, Some _4]
                   )
# 79 "Parser.fsy"
                 : 'parms));
# 634 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parms)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 80 "Parser.fsy"
                                                         (_1, None) :: _2 
                   )
# 80 "Parser.fsy"
                 : 'parms));
# 646 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ty)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'parms)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 81 "Parser.fsy"
                                                         (_2, Some _4) :: _6
                   )
# 81 "Parser.fsy"
                 : 'parms));
# 659 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.Int32)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 84 "Parser.fsy"
                                                               Lit (LInt _1) 
                   )
# 84 "Parser.fsy"
                 : 'expr_app_atom));
# 670 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.Double)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 85 "Parser.fsy"
                                                               Lit (LFloat _1) 
                   )
# 85 "Parser.fsy"
                 : 'expr_app_atom));
# 681 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "Parser.fsy"
                                                               Lit (LString _1) 
                   )
# 86 "Parser.fsy"
                 : 'expr_app_atom));
# 692 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.Char)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 "Parser.fsy"
                                                               Lit (LChar _1) 
                   )
# 87 "Parser.fsy"
                 : 'expr_app_atom));
# 703 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 "Parser.fsy"
                                                               Lit (LBool true) 
                   )
# 88 "Parser.fsy"
                 : 'expr_app_atom));
# 713 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 89 "Parser.fsy"
                                                               Lit (LBool false) 
                   )
# 89 "Parser.fsy"
                 : 'expr_app_atom));
# 723 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 90 "Parser.fsy"
                                                               Lit LUnit 
                   )
# 90 "Parser.fsy"
                 : 'expr_app_atom));
# 733 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 "Parser.fsy"
                                                               Var _1 
                   )
# 92 "Parser.fsy"
                 : 'expr_app_atom));
# 744 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 94 "Parser.fsy"
                                                               _2 
                   )
# 94 "Parser.fsy"
                 : 'expr_app_atom));
# 755 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_app_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 97 "Parser.fsy"
                                                                       _1 
                   )
# 97 "Parser.fsy"
                 : 'expr_tuple_atom));
# 766 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_app_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "Parser.fsy"
                                                                       App (_1, _2) 
                   )
# 98 "Parser.fsy"
                 : 'expr_tuple_atom));
# 778 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 "Parser.fsy"
                                                                       Lambda (_2, None, _4) 
                   )
# 100 "Parser.fsy"
                 : 'expr_tuple_atom));
# 790 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'ty)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "Parser.fsy"
                                                                       Lambda (_3, Some _5, _8) 
                   )
# 101 "Parser.fsy"
                 : 'expr_tuple_atom));
# 803 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'binding)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "Parser.fsy"
                                                                       LetIn (_1, _3) 
                   )
# 103 "Parser.fsy"
                 : 'expr_tuple_atom));
# 815 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "Parser.fsy"
                                                                 UnOp ("not", _2) 
                   )
# 105 "Parser.fsy"
                 : 'expr_tuple_atom));
# 826 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "Parser.fsy"
                                                                               UnOp ("neg", _2) 
                   )
# 106 "Parser.fsy"
                 : 'expr_tuple_atom));
# 837 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "Parser.fsy"
                                                                               UnOp ("neg.", _2) 
                   )
# 107 "Parser.fsy"
                 : 'expr_tuple_atom));
# 848 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 "Parser.fsy"
                                                                             UnOp ("-", _2) 
                   )
# 109 "Parser.fsy"
                 : 'expr_tuple_atom));
# 859 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "Parser.fsy"
                                                                    BinOp (_1, "+", _3) 
                   )
# 111 "Parser.fsy"
                 : 'expr_tuple_atom));
# 871 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "Parser.fsy"
                                                                     BinOp (_1, "-", _3) 
                   )
# 112 "Parser.fsy"
                 : 'expr_tuple_atom));
# 883 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "Parser.fsy"
                                                                    BinOp (_1, "*", _3) 
                   )
# 113 "Parser.fsy"
                 : 'expr_tuple_atom));
# 895 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 "Parser.fsy"
                                                                     BinOp (_1, "/", _3) 
                   )
# 114 "Parser.fsy"
                 : 'expr_tuple_atom));
# 907 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 "Parser.fsy"
                                                                          BinOp (_1, "%", _3) 
                   )
# 115 "Parser.fsy"
                 : 'expr_tuple_atom));
# 919 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "Parser.fsy"
                                                                          BinOp (_1, "+.", _3) 
                   )
# 117 "Parser.fsy"
                 : 'expr_tuple_atom));
# 931 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "Parser.fsy"
                                                                        BinOp (_1, "-.", _3) 
                   )
# 118 "Parser.fsy"
                 : 'expr_tuple_atom));
# 943 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "Parser.fsy"
                                                                       BinOp (_1, "*.", _3) 
                   )
# 119 "Parser.fsy"
                 : 'expr_tuple_atom));
# 955 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "Parser.fsy"
                                                                        BinOp (_1, "/.", _3) 
                   )
# 120 "Parser.fsy"
                 : 'expr_tuple_atom));
# 967 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 "Parser.fsy"
                                                                          BinOp (_1, "%.", _3) 
                   )
# 121 "Parser.fsy"
                 : 'expr_tuple_atom));
# 979 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "Parser.fsy"
                                                                   BinOp (_1, "=", _3) 
                   )
# 123 "Parser.fsy"
                 : 'expr_tuple_atom));
# 991 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "Parser.fsy"
                                                                    BinOp (_1, "<>", _3) 
                   )
# 124 "Parser.fsy"
                 : 'expr_tuple_atom));
# 1003 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 "Parser.fsy"
                                                                   BinOp (_1, "<", _3) 
                   )
# 125 "Parser.fsy"
                 : 'expr_tuple_atom));
# 1015 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 "Parser.fsy"
                                                                   BinOp (_1, ">", _3) 
                   )
# 126 "Parser.fsy"
                 : 'expr_tuple_atom));
# 1027 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "Parser.fsy"
                                                                    BinOp (_1, "<=", _3) 
                   )
# 127 "Parser.fsy"
                 : 'expr_tuple_atom));
# 1039 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "Parser.fsy"
                                                                    BinOp (_1, ">=", _3) 
                   )
# 128 "Parser.fsy"
                 : 'expr_tuple_atom));
# 1051 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "Parser.fsy"
                                                                         BinOp (_1, "=.", _3) 
                   )
# 130 "Parser.fsy"
                 : 'expr_tuple_atom));
# 1063 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "Parser.fsy"
                                                                          BinOp (_1, "<>.", _3) 
                   )
# 131 "Parser.fsy"
                 : 'expr_tuple_atom));
# 1075 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 "Parser.fsy"
                                                                         BinOp (_1, "<.", _3) 
                   )
# 132 "Parser.fsy"
                 : 'expr_tuple_atom));
# 1087 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "Parser.fsy"
                                                                         BinOp (_1, ">.", _3) 
                   )
# 133 "Parser.fsy"
                 : 'expr_tuple_atom));
# 1099 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "Parser.fsy"
                                                                          BinOp (_1, "<=.", _3) 
                   )
# 134 "Parser.fsy"
                 : 'expr_tuple_atom));
# 1111 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "Parser.fsy"
                                                                          BinOp (_1, ">=.", _3) 
                   )
# 135 "Parser.fsy"
                 : 'expr_tuple_atom));
# 1123 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "Parser.fsy"
                                                                                   BinOp (_1, "and", _3) 
                   )
# 137 "Parser.fsy"
                 : 'expr_tuple_atom));
# 1135 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "Parser.fsy"
                                                                         BinOp (_1, "or", _3) 
                   )
# 138 "Parser.fsy"
                 : 'expr_tuple_atom));
# 1147 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "Parser.fsy"
                                                                                   IfThenElse (_2, _4, None) 
                   )
# 140 "Parser.fsy"
                 : 'expr_tuple_atom));
# 1159 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "Parser.fsy"
                                                                                   IfThenElse (_2, _4, Some _6) 
                   )
# 141 "Parser.fsy"
                 : 'expr_tuple_atom));
# 1172 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "Parser.fsy"
                                                                       [_1] 
                   )
# 144 "Parser.fsy"
                 : 'expr_tuple_atoms));
# 1183 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atoms)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "Parser.fsy"
                                                                       _1 :: _3 
                   )
# 145 "Parser.fsy"
                 : 'expr_tuple_atoms));
# 1195 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "Parser.fsy"
                                                               TyName _1 
                   )
# 149 "Parser.fsy"
                 : 'ty));
# 1206 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "Parser.fsy"
                                                               TyArrow (_1, _3) 
                   )
# 150 "Parser.fsy"
                 : 'ty));
# 1218 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ty_tuple)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "Parser.fsy"
                                                               TyTuple _1 
                   )
# 151 "Parser.fsy"
                 : 'ty));
# 1229 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "Parser.fsy"
                                                               _2 
                   )
# 152 "Parser.fsy"
                 : 'ty));
# 1240 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "Parser.fsy"
                                                               [_1] 
                   )
# 155 "Parser.fsy"
                 : 'ty_tuple));
# 1251 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ty_tuple)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "Parser.fsy"
                                                               _1 :: _3 
                   )
# 156 "Parser.fsy"
                 : 'ty_tuple));
|]
# 1264 "Parser.fs"
let tables () : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 51;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let interactive lexer lexbuf :  TinyML.Ast.interactive  =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
let program lexer lexbuf :  TinyML.Ast.expr  =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 2))
